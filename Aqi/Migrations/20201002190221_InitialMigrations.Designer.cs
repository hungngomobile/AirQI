// <auto-generated />
using System;
using Aqi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aqi.Migrations
***REMOVED***
    [DbContext(typeof(AqiDbContext))]
    [Migration("20201002190221_InitialMigrations")]
    partial class InitialMigrations
    ***REMOVED***
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        ***REMOVED***
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Aqi.Models.City", b =>
                ***REMOVED***
                    b.Property<int>("IdCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryIdCountry")
                        .HasColumnType("int");

                    b.Property<int>("LocationIdLocation")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("IdCity");

                    b.HasIndex("CountryIdCountry");

                    b.HasIndex("LocationIdLocation");

                    b.ToTable("City");
               ***REMOVED***);

            modelBuilder.Entity("Aqi.Models.Country", b =>
                ***REMOVED***
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("IdCountry");

                    b.ToTable("Country");
               ***REMOVED***);

            modelBuilder.Entity("Aqi.Models.Location", b =>
                ***REMOVED***
                    b.Property<int>("IdLocation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Accuracy")
                        .HasColumnType("double");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.HasKey("IdLocation");

                    b.ToTable("Location");
               ***REMOVED***);

            modelBuilder.Entity("Aqi.Models.Measurement", b =>
                ***REMOVED***
                    b.Property<int>("IdMeasurement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Metric")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("StationFK")
                        .HasColumnType("int");

                    b.Property<int?>("StationIdStation")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("IdMeasurement");

                    b.HasIndex("StationIdStation");

                    b.ToTable("Measurement");
               ***REMOVED***);

            modelBuilder.Entity("Aqi.Models.Station", b =>
                ***REMOVED***
                    b.Property<int>("IdStation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CityIdCity")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdCountry")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LocationIdLocation")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdStation");

                    b.HasIndex("CityIdCity");

                    b.HasIndex("CountryIdCountry");

                    b.HasIndex("LocationIdLocation");

                    b.ToTable("Stations");
               ***REMOVED***);

            modelBuilder.Entity("Aqi.Models.City", b =>
                ***REMOVED***
                    b.HasOne("Aqi.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryIdCountry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aqi.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationIdLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
               ***REMOVED***);

            modelBuilder.Entity("Aqi.Models.Measurement", b =>
                ***REMOVED***
                    b.HasOne("Aqi.Models.Station", null)
                        .WithMany("Measurements")
                        .HasForeignKey("StationIdStation");
               ***REMOVED***);

            modelBuilder.Entity("Aqi.Models.Station", b =>
                ***REMOVED***
                    b.HasOne("Aqi.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityIdCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aqi.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryIdCountry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aqi.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationIdLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
               ***REMOVED***);
#pragma warning restore 612, 618
       ***REMOVED***
   ***REMOVED***
***REMOVED***
