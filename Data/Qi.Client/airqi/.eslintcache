[{"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\index.js":"1","C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\App.js":"2","C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\reportWebVitals.js":"3","C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\components\\Dashboard.js":"4","C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\components\\Map.js":"5"},{"size":494,"mtime":1608225555109,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1608218200537,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1607718255021,"results":"9","hashOfConfig":"7"},{"size":3315,"mtime":1611066542477,"results":"10","hashOfConfig":"7"},{"size":1358,"mtime":1611066542478,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1otbmhi",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\index.js",[],["24","25"],"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\App.js",[],"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\reportWebVitals.js",[],"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\components\\Dashboard.js",["26"],"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\components\\Map.js",["27","28","29"],"/// app.js\r\nimport useSwr from \"swr\";\r\nimport React, { useState } from 'react';\r\nimport ReactMapGL, { Marker } from 'react-map-gl';\r\nimport { ReactComponent as Pin } from \"../assets/media/pin-icon.svg\";\r\n\r\n// Data fetching method\r\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\r\n\r\n// DeckGL react component\r\nexport default function Map() {\r\n  // Viewport settings\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 50.8503,\r\n    longitude: 52.3517,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zoom: 12\r\n  });\r\n\r\n  // Load and prepare data\r\n  const { data, error } = useSwr(process.env.REACT_APP_API_URL + \"api/stations\", fetcher);\r\n  const stations = (data && !error) ? data : [];\r\n  \r\n  return (\r\n    <div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        mapStyle=\"mapbox://styles/constantimi/ckisx2s921doh19sz2tyod230\"\r\n        onViewportChange={viewport => {\r\n          setViewport(viewport);\r\n        }}\r\n      >\r\n        \r\n        {stations.map(function (station, index) {\r\n          return (\r\n            <Marker key={index} latitude={station.coordinates.latitude} longitude={station.coordinates.longitude}>\r\n              <Pin />\r\n            </Marker>\r\n          );\r\n        })}\r\n\r\n      </ReactMapGL>\r\n        \r\n    </div>\r\n  );\r\n\r\n}",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":4,"column":25,"nodeType":"36","messageId":"37","endLine":4,"endColumn":35},{"ruleId":"34","severity":1,"message":"38","line":7,"column":22,"nodeType":"36","messageId":"37","endLine":7,"endColumn":28},{"ruleId":"34","severity":1,"message":"39","line":8,"column":28,"nodeType":"36","messageId":"37","endLine":8,"endColumn":31},{"ruleId":"34","severity":1,"message":"40","line":25,"column":9,"nodeType":"36","messageId":"37","endLine":25,"endColumn":17},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'textFilter' is defined but never used.","Identifier","unusedVar","'Marker' is defined but never used.","'Pin' is defined but never used.","'stations' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]