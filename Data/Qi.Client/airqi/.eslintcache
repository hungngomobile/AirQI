[***REMOVED***"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\index.js":"1","C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\App.js":"2","C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\reportWebVitals.js":"3","C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\components\\Dashboard.js":"4","C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\components\\Map.js":"5","C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\components\\locations.tsx":"6"***REMOVED***,***REMOVED***"size":494,"mtime":1608225555109,"results":"7","hashOfConfig":"8"***REMOVED***,***REMOVED***"size":375,"mtime":1608218200537,"results":"9","hashOfConfig":"8"***REMOVED***,***REMOVED***"size":375,"mtime":1607718255021,"results":"10","hashOfConfig":"8"***REMOVED***,***REMOVED***"size":3313,"mtime":1611057185370,"results":"11","hashOfConfig":"8"***REMOVED***,***REMOVED***"size":4110,"mtime":1611066493092,"results":"12","hashOfConfig":"8"***REMOVED***,***REMOVED***"size":1289,"mtime":1611006273950,"results":"13","hashOfConfig":"8"***REMOVED***,***REMOVED***"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"***REMOVED***,"1otbmhi",***REMOVED***"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"***REMOVED***,***REMOVED***"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"***REMOVED***,***REMOVED***"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"***REMOVED***,***REMOVED***"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null***REMOVED***,***REMOVED***"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"***REMOVED***,"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\index.js",[],["29","30"],"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\App.js",[],"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\reportWebVitals.js",[],"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\components\\Dashboard.js",["31"],"// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, ***REMOVED*** textFilter***REMOVED*** from 'react-bootstrap-table2-filter';\r\nimport ToolkitProvider, ***REMOVED*** Search***REMOVED*** from 'react-bootstrap-table2-toolkit';\r\n\r\nimport ***REMOVED*** HubConnectionBuilder***REMOVED*** from \"@microsoft/signalr\";\r\n\r\nimport React, ***REMOVED*** useEffect, useState***REMOVED*** from 'react';\r\nimport ***REMOVED*** Container***REMOVED*** from 'reactstrap';\r\nimport useSwr from \"swr\";\r\n\r\n// Data fetching method\r\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\r\n\r\nexport default function Dashboard() ***REMOVED***\r\n\r\n    const [hubConnection, setHubConnection] = useState(null);\r\n    \r\n    // Load and prepare data\r\n    const ***REMOVED*** data, error***REMOVED*** = useSwr(process.env.REACT_APP_API_URL + \"api/stations\", fetcher);\r\n    const stations = (data && !error) ? data : [];\r\n    \r\n    useEffect(() => ***REMOVED***\r\n        // Create Hub Connection.\r\n        const createHubConnection = async () => ***REMOVED***\r\n\r\n            const hubConnect = new HubConnectionBuilder()\r\n            .withUrl(process.env.REACT_APP_API_URL + \"livestations\")\r\n            .withAutomaticReconnect()\r\n            .build();\r\n            \r\n            // Set the initial SignalR Hub Connection.\r\n            setHubConnection(hubConnect);\r\n            \r\n       ***REMOVED***\r\n\r\n        createHubConnection();\r\n   ***REMOVED***, []);\r\n    \r\n    // Websocket\r\n    useEffect(() => ***REMOVED***\r\n\r\n        const startHubConnection = async () => ***REMOVED***\r\n            if (hubConnection) ***REMOVED***\r\n                await hubConnection\r\n                    .start()\r\n                    .then((result) => ***REMOVED***\r\n                        console.log(\"SignalR Connected!\");\r\n\r\n                        hubConnection.on(\"GetNewStationsAsync\", (stations) => ***REMOVED***\r\n                            console.log(\"New Updated Data\");\r\n                            console.log(stations);\r\n                            this.stations = stations;\r\n                       ***REMOVED***);\r\n                   ***REMOVED***)\r\n                    .catch((e) => console.log(\"Connection failed: \", e));\r\n           ***REMOVED***\r\n       ***REMOVED***\r\n         \r\n        startHubConnection();\r\n\r\n   ***REMOVED***, [hubConnection]);\r\n\r\n\r\n    // Render the information\r\n    const ***REMOVED*** SearchBar***REMOVED*** = Search;\r\n\r\n    const columns = [***REMOVED***\r\n        dataField: 'id',\r\n        text: '_id',\r\n        sort: true\r\n     ***REMOVED***, ***REMOVED***\r\n        dataField: 'location',\r\n        text: 'Name',\r\n        sort: true\r\n     ***REMOVED***, ***REMOVED***\r\n        dataField: 'city',\r\n        text: 'City',\r\n        sort: true\r\n     ***REMOVED***, ***REMOVED***\r\n        dataField: 'country',\r\n        text: 'Country',\r\n        // filter: textFilter(),\r\n        sort: true\r\n     ***REMOVED***, ***REMOVED***\r\n        dataField: 'aqi',\r\n        text: 'Aqi',\r\n        sort: true\r\n   ***REMOVED***];\r\n    \r\n    return(\r\n        <Container>\r\n            <ToolkitProvider keyField=\"id\" data=***REMOVED***stations***REMOVED*** columns=***REMOVED***columns***REMOVED*** search>\r\n            ***REMOVED***\r\n                props => (\r\n                <div>\r\n                    <h3>AirQi Stations Data </h3>\r\n                    <SearchBar ***REMOVED*** ...props.searchProps***REMOVED*** />\r\n                    <BootstrapTable ***REMOVED*** ...props.baseProps***REMOVED*** filter=***REMOVED***filterFactory()***REMOVED*** pagination=***REMOVED***paginationFactory()***REMOVED*** striped hover />\r\n                </div>\r\n                )\r\n           ***REMOVED***\r\n            </ToolkitProvider>\r\n        </Container>\r\n    );\r\n\r\n***REMOVED*** ","C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\components\\Map.js",["32","33","34"],"C:\\Users\\mihai\\Documents\\Git\\airqi-project\\Data\\Qi.Client\\airqi\\src\\components\\locations.tsx",[],["35","36"],***REMOVED***"ruleId":"37","replacedBy":"38"***REMOVED***,***REMOVED***"ruleId":"39","replacedBy":"40"***REMOVED***,***REMOVED***"ruleId":"41","severity":1,"message":"42","line":4,"column":25,"nodeType":"43","messageId":"44","endLine":4,"endColumn":35***REMOVED***,***REMOVED***"ruleId":"41","severity":1,"message":"45","line":7,"column":22,"nodeType":"43","messageId":"44","endLine":7,"endColumn":28***REMOVED***,***REMOVED***"ruleId":"41","severity":1,"message":"46","line":8,"column":28,"nodeType":"43","messageId":"44","endLine":8,"endColumn":31***REMOVED***,***REMOVED***"ruleId":"41","severity":1,"message":"47","line":25,"column":9,"nodeType":"43","messageId":"44","endLine":25,"endColumn":17***REMOVED***,***REMOVED***"ruleId":"37","replacedBy":"48"***REMOVED***,***REMOVED***"ruleId":"39","replacedBy":"49"***REMOVED***,"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'textFilter' is defined but never used.","Identifier","unusedVar","'Marker' is defined but never used.","'Pin' is defined but never used.","'stations' is assigned a value but never used.",["50"],["51"],"no-global-assign","no-unsafe-negation"]